{"name":"Flannel","tagline":"A logging module for Angular","body":"Flannel\r\n=======\r\n\r\nQuick Start!\r\n\r\nInstall with Bower\r\n\r\n    bower install flannel\r\n\r\nUse\r\n\r\nAdd flannel as a module, set up your loggers, set a logging level\r\n\r\n    (function () {\r\n        function homeController(logger) {\r\n            logger.log('thing', 123, {\r\n                123: 123\r\n            });\r\n            logger.warn('thing', 123, {\r\n                123: 123\r\n            });\r\n            logger.info('thing', 123, {\r\n                123: 123\r\n            });\r\n            logger.error('thing', 123, {\r\n                123: 123\r\n            });\r\n        }\r\n     \r\n        var app = angular.module('app', ['flannel']);\r\n        app.run(['flannel.logger', function (logger) {\r\n            logger.setDefaultHandlers();\r\n            logger.setLogLevel(logger.logLevels.info);\r\n            logger.setLoggingHandler(logger.logLevels.info, function () {\r\n                console.log('Custom info handler!');\r\n            });\r\n     \r\n        }]);\r\n        app.controller('home', ['flannel.logger', homeController]);\r\n     \r\n    })();\r\n\r\nAbout\r\n=====\r\n\r\nFlannel has 4 logging levels\r\n\r\n-  log\r\n-  info\r\n-  warn\r\n-  error\r\n\r\nYou can add a handler to a logging level for doing things like posting to an API by calling\r\n\r\n    logger.setLoggingHandler(logger.logLevel.<level>, yourHandler)\r\n\r\nCalling `setDefaultHandlers()` will turn on the `console.<level>` loggers\r\n\r\nBy default the logging level is **error**\r\n\r\nYou can change the logging level at runtime by calling\r\n\r\n    localStorage.setItem('flannel.loglevel', <level>)\r\n\r\n\r\n","google":"UA-42119078-1","note":"Don't delete this file! It's used internally to help with page regeneration."}