
(function(){'use strict';function Logger($window,$log){this.$window=$window;this.$log=$log;this.createLog('default');this.log=this.default.log;this.warn=this.default.warn;this.info=this.default.info;this.error=this.default.error;return this;}
Logger.prototype.logs={};Logger.prototype._logLevel='error';Logger.prototype.logWrapper=function(logName,level){var self=this;var handlers=self.logs[logName].logHandlers[level];return function(){var args=arguments;var _level=self.logLevel(logName);if(self.logTiers[level]<=self.logTiers[_level]){handlers.forEach(function(handler){handler.apply(null,args);});}};};Logger.prototype.setGlobablLogLevel=function(level){this._logLevel=level;};Logger.prototype.logLevels={log:'log',info:'info',warn:'warn',error:'error'};Logger.prototype.logLevel=function(logName){var self=this;logName=logName||'default';var logLevel=self.$window.localStorage.getItem('flannel.loglevel.'+logName);if(logLevel===null||logLevel===""){logLevel=self.$window.localStorage.getItem('flannel.loglevel');}
if(logLevel===null||logLevel===""){logLevel=self[logName].logLevel;}
if(logLevel===null||logLevel===""){logLevel=self._logLevel;}
return logLevel;};Logger.prototype.logTiers={log:3,info:2,warn:1,error:0};Logger.prototype.createLogHandlers=function(){return{log:[],info:[],warn:[],error:[]};};Logger.prototype.setLogLevel=function(level){this.default.logLevel=level;};Logger.prototype.setLoggingHandler=function(level,handler){this.setHandler.call(this.default,level,handler);};Logger.prototype.createLog=function(logName){var self=this;if(self[logName]){throw new Error('Can not create log with that name');}
self.logs[logName]={name:logName,logLevel:null,logHandlers:self.createLogHandlers(),setLoggingHandler:self.setHandler};self.logs[logName].log=self.logWrapper(logName,self.logLevels.log);self.logs[logName].info=self.logWrapper(logName,self.logLevels.info);self.logs[logName].error=self.logWrapper(logName,self.logLevels.error);self.logs[logName].warn=self.logWrapper(logName,self.logLevels.warn);self.logs[logName].setLogLevel=function(level){self.logs[logName].logLevel=level;};self[logName]=self.logs[logName];};Logger.prototype.setHandler=function(level,handler){this.logHandlers[level].push(handler);};Logger.prototype.setDefaultHandlers=function(logName){logName=logName||'default';this.logs[logName].logHandlers.log.push(this.$log.log);this.logs[logName].logHandlers.warn.push(this.$log.warn);this.logs[logName].logHandlers.info.push(this.$log.info);this.logs[logName].logHandlers.error.push(this.$log.error);};if(angular!==undefined){angular.module('flannel',[]).service('flannel.logger',['$window','$log',Logger]);}
else{window.Flannel=function(){return new Logger(window,console||{log:noOp,warn:noOp,info:noOp,error:noOp});};}
function noOp(){return;}})();